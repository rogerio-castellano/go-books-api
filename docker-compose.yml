services:
  api:
    build:
      context: backend
    container_name: books-api
    image: books-api
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_HOST: books-db
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: books_db
    networks:
      - books-network
    ports:
      - "8080:8080"
    depends_on:
      - db

  frontend:
    # image: node:23-alpine # Replace this with the actual React production build image if needed
    # working_dir: /app
    build:
      context: frontend
    container_name: books-app
    volumes:
      - ./frontend:/app
    command: ["npm", "start"] # For development; replace with "npm run build" for production
    # command: ["npm run build"] # For development; replace with "npm run build" for production
    ports:
      - "3000:3000"
    networks:
      - books-network
    depends_on:
      - api

  db:
    build:
      context: db
    container_name: books-db
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - books-network

  pgadmin:
    container_name: books-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=example@example.com
      - PGADMIN_DEFAULT_PASSWORD=example
    ports:
      - "5050:80"
    restart: always
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - books-network

networks:
  books-network:
    driver: bridge

volumes:
  pgdata:
  pgadmin:
    driver: local
